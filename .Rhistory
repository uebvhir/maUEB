hm_palette
hm_clustCol
hm_clustCol.dist
hm_clustCol.method
hm_clustRow.cor
batcheffect
batchcolName
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = FALSE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
})
venn_comparNames
venn_compar[[v]]
seq_along(venn_comparNames)
v<-1
venn_compar[[v]]
names(listofcsv)
names(listofcsv) <- listofcoef
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = FALSE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
})
listofTopNamed <- listofcsv
topTabs <- listofTopNamed[namescomp]
colFeat[v]
colFeat = colFeat[v]
label = venn_comparNames[v]
colPval = venn_pval[v]
pval = venn_pval.thr[v]
colFC=venn_FC_col[v]
FC=venn_FC.thr[v]
include=venn_include[v]
## Reading input data
for (i in 1:length(topTabs)) {
if (include=="abs"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & abs(topTabs[[i]][, colFC]) > FC])}
if (include=="up"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & topTabs[[i]][, colFC] > FC])}
if (include=="down"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & topTabs[[i]][, colFC] < FC])}
}
## Initializing lists
list_genes_sel <- list()
topTabs <- listofTopNamed[namescomp]
## Reading input data
for (i in 1:length(topTabs)) {
if (include=="abs"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & abs(topTabs[[i]][, colFC]) > FC])}
if (include=="up"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & topTabs[[i]][, colFC] > FC])}
if (include=="down"){list_genes_sel[[i]] <- as.character(topTabs[[i]][, colFeat][topTabs[[i]][, colPval] < pval & topTabs[[i]][, colFC] < FC])}
}
View(list_genes_sel)
i
i=1
include
venn_include <- list("abs")
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = FALSE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
})
View(listsharedelems)
knitr::fig_chunk(resultsDir,'/VennDiagram.abs.EffectTreatment.P.Value0.05.logFC1.pdf')
lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
})
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
})
View(loadDEA_parameters)
View(listsharedelems)
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
return(listsharedelems)
})
View(listsharedelems)
View(listsharedelems)
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
return(listsharedelems)
})
names(listsharedelems) <- venn_comparNames
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
return(listsharedelems)
})
names(listsharedelems) <- venn_comparNames
knitr::include_graphics(file.path(outputDir, paste0("VennDiagram.", include, ".",label, ".", colPval, pval, ".",colFC,FC,".pdf")))
knitr::include_graphics(file.path(resultsDir, paste0("VennDiagram.", include, ".",label, ".", colPval, pval, ".",colFC,FC,".pdf")))
knitr::include_graphics(file.path(resultsDir, paste0("VennDiagram", include, ".",label, ".", colPval, pval, ".",colFC,FC,".pdf")))
include <- "abs"
knitr::include_graphics(file.path(resultsDir, paste0("VennDiagram.", include, ".",label, ".", colPval, pval, ".",colFC,FC,".pdf")))
knitr::include_graphics(file.path(resultsDir, "VennDiagram.abs.EffectTreatment.adj.P.Val0.05.logFC1.pdf"))
mc_hm(hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batcheffect2=batcheffect2, batcheffect3=batcheffect3, batchcolName=batchcolName, batchcolName2=batchcolName2, batchcolName3=batchcolName3, resultsSummFN=resultsSummFN, outputDir=resultsDir)
hm_logFC <- c(1, 1)
mc_hm(hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batcheffect2=batcheffect2, batcheffect3=batcheffect3, batchcolName=batchcolName, batchcolName2=batchcolName2, batchcolName3=batchcolName3, resultsSummFN=resultsSummFN, outputDir=resultsDir)
mc_all(listofTopNamed=listofTopNamed, namescomp=namescomp, label = venn_comparNames, colFeat = colFeat,
colPval = venn_pval, pval = venn_pval.thr, colFC=venn_FC_col, FC=venn_FC.thr, include=venn_include, pltR = FALSE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended, colors = rainbow(length(namescomp)), hm_comparNames=hm_comparNames, hm_compar=hm_compar,       hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_palette=hm_palette,                                           hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor,                             batcheffect=batcheffect, batcheffect2=batcheffect2, batcheffect3=batcheffect3, batchcolName=batchcolName, batchcolName2=batchcolName2, batchcolName3=batchcolName3, resultsSummFN=resultsSummFN, outputDir=resultsDir)
#Parameters
source(file.path(paramDir, "04-ABS-GSEA.par"))
#Execution parameters
source(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"))
(loadABSGSEA_parameters <- read.table(file.path(paramDir, "04-ABS-GSEA.par"), header = FALSE, sep=";", as.is=TRUE))
(loadABSGSEA_allparameters <- read.table(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
gmtDir <- file.path(dataDir, "gmt_files")
load(file.path(dataDir, inputABSGSEARda))
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofTopNamed, namescomp=namescomp, organism_annot= organism_annot, keyType="ENTREZID", GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofTopNamed, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, keyType="ENTREZID", GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
#Parameters
source(file.path(paramDir, "04-ABS-ORA.par"))
if (!require(maUEB)){
require(devtools)
install_github("uebvhir/maUEB", build_vignettes = FALSE)
}
# Set working directory (it paths to vignette directory)
workingDir  <- here::here("vignettes")
# Parameters directory
paramDir <- file.path(workingDir, "parameters")
source(file.path(paramDir, "global_parameters.par"))
#Parameters
source(file.path(paramDir, "04-ABS-GSEA.par"))
#Execution parameters
source(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"))
(loadABSGSEA_parameters <- read.table(file.path(paramDir, "04-ABS-GSEA.par"), header = FALSE, sep=";", as.is=TRUE))
(loadABSGSEA_allparameters <- read.table(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
gmtDir <- file.path(dataDir, "gmt_files")
load(file.path(dataDir, inputABSGSEARda))
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofTopNamed, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, keyType="ENTREZID", GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofcsv, namescomp=listofcoef, annotPackage=annotPackage, organism_annot= organism_annot, keyType="ENTREZID", GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
namescomp <- names(listofcsv)[GO_comparisons]
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofcsv, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, ranking_metric=ranking_metric, geneColname=geneColname, keyType=keyType, GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
(loadABSGSEA_parameters <- read.table(file.path(paramDir, "04-ABS-GSEA.par"), header = FALSE, sep=";", as.is=TRUE))
namescomp <- names(listofcsv)[GO_comparisons]
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofcsv, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, ranking_metric=ranking_metric, geneColname=geneColname, keyType=keyType, GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=dataDir, gmtDir=resultsDir)
(loadABSGSEA_parameters <- read.table(file.path(paramDir, "04-ABS-GSEA.par"), header = FALSE, sep=";", as.is=TRUE))
View(listofcsv)
#Parameters
source(file.path(paramDir, "02-DEA.par"))
#Execution parameters
source(file.path(paramDir, "02-DEA_analysistodo.par"))
(loadDEA_parameters <- read.table(file.path(paramDir, "02-DEA.par"), header = FALSE, sep=";", as.is=TRUE))
(loadDEA_todoparameters <- read.table(file.path(paramDir, "02-DEA_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
load(file.path(dataDir, inputDEARda))
eset_analysis <- eval(parse(text=eset_analysis))
(design <- dea_lmdesign(targets=pData(eset_analysis), sampleNames="ShortName", data=eset_analysis,
group=design.mainfact, cov.fact=design.cofact, cov.num=design.num, fmla=NULL,
summaryFN=resultsSummFN, outputDir=resultsDir))
fit <- dea_lmfit(data=eset_analysis, targets=pData(eset_analysis), design=design, block.cor=NULL, summaryFN=resultsSummFN, outputDir=resultsDir)
fit.main <- dea_compare(fit=fit, contrasts=contrastsv, design=design, moderated=TRUE, summaryFN=resultsSummFN, outputDir=resultsDir)
(listofcoef <- colnames(fit.main))
#versio amb les html tables com venen per defecte (nomes mostra adj pval o pval)
listofcsv <- dea_toptab(listofcoef=listofcoef, fit.main=fit.main, eset=eset_analysis, padjust.method="fdr",
html_report=ReportHTMLTopTab,
html_ntop=500, html_group="Group", html_padjust_method = toptable_padjust_method,
outputDir=resultsDir)
?dea_toptab
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
#versio amb les html tables com venen per defecte (nomes mostra adj pval o pval)
listofcsv <- dea_toptab(listofcoef=listofcoef, fit.main=fit.main, eset=eset_analysis, padjust.method="fdr",
html_report=ReportHTMLTopTab,
html_ntop=500, html_group="Group", html_padjust_method = toptable_padjust_method,
outputDir=resultsDir)
?dea_toptab
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
#Parameters
source(file.path(paramDir, "02-DEA.par"))
#Execution parameters
source(file.path(paramDir, "02-DEA_analysistodo.par"))
eset_analysis <- eval(parse(text=eset_analysis))
load(file.path(dataDir, inputDEARda))
eset_analysis <- eval(parse(text=eset_analysis))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
load(file.path(dataDir, inputDEARda))
eset_analysis <- eval(parse(text=eset_analysis))
(design <- dea_lmdesign(targets=pData(eset_analysis), sampleNames="ShortName", data=eset_analysis,
group=design.mainfact, cov.fact=design.cofact, cov.num=design.num, fmla=NULL,
summaryFN=resultsSummFN, outputDir=resultsDir))
fit <- dea_lmfit(data=eset_analysis, targets=pData(eset_analysis), design=design, block.cor=NULL, summaryFN=resultsSummFN, outputDir=resultsDir)
fit.main <- dea_compare(fit=fit, contrasts=contrastsv, design=design, moderated=TRUE, summaryFN=resultsSummFN, outputDir=resultsDir)
(listofcoef <- colnames(fit.main))
#versio amb les html tables com venen per defecte (nomes mostra adj pval o pval)
listofcsv <- dea_toptab(listofcoef=listofcoef, fit.main=fit.main, eset=eset_analysis, padjust.method="fdr",
html_report=ReportHTMLTopTab,
html_ntop=500, html_group="Group", html_padjust_method = toptable_padjust_method,
outputDir=resultsDir)
head(listofcsv[[1]])
View(listofcsv)
(numGenesChanged <- dea_summary_ngc(listofcoef=listofcoef, listofcsv=listofcsv, B_thr=c(0), Pval_thr=c(0.01,0.05,0.1), adjPval_thr=c(0.01,0.05,0.15,0.25), logFC_thr=0, outputDir=resultsDir))
ngc_list <- dea_summary_ngc_ext(listofcoef=listofcoef, listofcsv=listofcsv, B_thr.e=c(0), Pval_thr.e=c(0.01,0.05,0.1), adjPval_thr.e=c(0.01,0.05,0.15,0.25), logFC_thr.e=c(0,0.5,1,1.5,2), outputDir=resultsDir)
names(ngc_list)
head(ngc_list[["PD1vsCTL"]])
numGenesChanged_all <- dea_summary_ngc1(listofcoef=listofcoef, listofcsv=listofcsv, B_thr=c(0), Pval_thr=c(0.01,0.05,0.1), adjPval_thr=c(0.01,0.05,0.15,0.25), logFC_thr=0, extended=TRUE, B_thr.e=c(0), Pval_thr.e=c(0.01,0.05,0.1), adjPval_thr.e=c(0.01,0.05,0.15,0.25), logFC_thr.e=c(0,0.5,1,1.5,2), outputDir=resultsDir)
names(numGenesChanged_all)
dea_volcanoplot(listofcsv=listofcsv, listofcoef=listofcoef, volc_logFC=rep(1,length(listofcoef)), volc_pval=c(rep("adj.P.Val", length(listofcoef))), volc_pval.thr=rep(0.05, length(listofcoef)), volc_x0=rep(-3, length(listofcoef)), volc_x1=rep(+3, length(listofcoef)), volc_y0=rep(0, length(listofcoef)), volc_y1=rep(10, length(listofcoef)), n=6, cols=2, outputDir=resultsDir, label="")
dea.results <- dea_all(data=eset_analysis, targets=pData(eset_analysis), sampleNames="ShortName", group=design.mainfact, cov.fact=design.cofact, cov.num=design.num, fmla=NULL, block.cor=blocking.fact, contrastsv=contrastsv, moderated=TRUE, padjust.method="fdr", html_report=FALSE, html_ntop=500, html_group="Group", B_thr=c(0), Pval_thr=c(0.01,0.05,0.1), adjPval_thr=c(0.01,0.05,0.15,0.25), logFC_thr=0, extended=TRUE, B_thr.e=c(0), Pval_thr.e=c(0.01,0.05,0.1), adjPval_thr.e=c(0.01,0.05,0.15,0.25), logFC_thr.e=c(0,0.5,1,1.5,2), dovolcanoplot=TRUE, volc_logFC=rep(1,length(contrastsv)), volc_pval=c(rep("adj.P.Val", length(contrastsv))), volc_pval.thr=rep(0.05, length(contrastsv)), volc_x0=rep(-3, length(contrastsv)), volc_x1=rep(+3, length(contrastsv)), volc_y0=rep(0, length(contrastsv)), volc_y1=rep(10, length(contrastsv)), n=6, cols=2, label="", summaryFN=resultsSummFN, outputDir=resultsDir)
names(dea.results)
dea.results$fit.main$design
dea.results$fit.main$contrasts
#extract objects for further analysis:
fit.main <- dea.results$fit.main
listofcsv <- dea.results$listofcsv
numGenesChanged_all <- dea.results$numGenesChanged
save(listofcoef, listofcsv, eset_norm, eset_analysis, targets, file=file.path(dataDir,"afterTopTabs.Rda"), version=2)
#Parameters
source(file.path(paramDir, "03-MC.par"))
#Execution parameters
source(file.path(paramDir, "03-MC_analysistodo.par"))
(loadMC_parameters <- read.table(file.path(paramDir, "03-MC.par"), header = FALSE, sep=";", as.is=TRUE))
(loadMC_todoparameters <- read.table(file.path(paramDir, "03-MC_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
load(file.path(dataDir, inputMCRda))
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- mc_venn_upset(listofTopNamed=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
return(listsharedelems)
})
names(listsharedelems) <- venn_comparNames
knitr::include_graphics(file.path(resultsDir, "VennDiagram.abs.EffectTreatment.adj.P.Val0.05.logFC1.pdf"))
mc_hm(hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batcheffect2=batcheffect2, batcheffect3=batcheffect3, batchcolName=batchcolName, batchcolName2=batchcolName2, batchcolName3=batchcolName3, resultsSummFN=resultsSummFN, outputDir=resultsDir)
View(eset_filtered)
View(design)
View(eset_analysis)
rep(list(c()), length(hm_comparNames))
View(listsharedelems)
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
#Parameters
source(file.path(paramDir, "03-MC.par"))
#Execution parameters
source(file.path(paramDir, "03-MC_analysistodo.par"))
(loadMC_parameters <- read.table(file.path(paramDir, "03-MC.par"), header = FALSE, sep=";", as.is=TRUE))
(loadMC_todoparameters <- read.table(file.path(paramDir, "03-MC_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
load(file.path(dataDir, inputMCRda))
listsharedelems <- lapply(seq_along(venn_comparNames), function(v) {
setwd(resultsDir)
namescomp <- names(listofcsv)[venn_compar[[v]]]
listsharedelems <- mc_venn_upset(listofcsv=listofcsv, namescomp=namescomp, label = venn_comparNames[v], colFeat = colFeat[v],
colPval = venn_pval[v], pval = venn_pval.thr[v], colFC=venn_FC_col[v], FC=venn_FC.thr[v], include=venn_include[v], pltR = TRUE,
pltPdf = TRUE, pltPng=FALSE, venn = TRUE, eul = FALSE, saveTables = TRUE, upsetPlot=FALSE,
saveTables_extended=Venn_sharedElems_extended,
colors = rainbow(length(namescomp)), trans = 0.5,
cex1 = 1, rotation=0, position=venn_pos[[v]], cex2 = 1, resultsSummFN=resultsSummFN, outputDir=resultsDir)
setwd(workingDir)
return(listsharedelems)
})
names(listsharedelems) <- venn_comparNames
knitr::include_graphics(file.path(resultsDir, "VennDiagram.abs.EffectTreatment.adj.P.Val0.05.logFC1.pdf"))
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
resultsDir
colorRampPalette(c("blue", "white", "red"))(n = 199)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
mc_hm <- function(listofcsv, hm_dataset, targets, featureCol="Gene.Symbol", hm_comparNames, hm_compar, hm_groupexclude=rep(list(c()), length(hm_comparNames)), hm_pval, hm_pval.thr, hm_logFC="logFC", hm_logFC.thr, hm_palette=colorRampPalette(c("blue", "white", "red"))(n = 199), hm_clustCol=TRUE, hm_clustCol.dist="euclidian", hm_clustCol.method="complete", hm_clustRow.cor=TRUE, batcheffect=FALSE,
batchcolName=NULL, batchcolName2=NULL, batchNumcolName=NULL, hm_plots_interactive=FALSE, resultsSummFN, outputDir){
if (batcheffect){
if(is.null(batchcolName)) batch <- NULL else batch <- as.factor(targets[,batchcolName])
if(is.null(batchcolName2)) batch2 <- NULL else batch2 <- as.factor(targets[,batchcolName2])
if(is.null(batchNumcolName)) batch.num <- NULL else batch.num <- targets[,batchNumcolName] #batchNumcolName can be a vector (multiple columns)
designmat <- model.matrix(~0+Group, targets)
hm_dataset[,as.character(targets$ShortName)] <- removeBatchEffect(hm_dataset[,as.character(targets$ShortName)], batch=batch, batch2=batch2, covariates=batch.num, design=designmat) #function from limma package
for (h in 1:length(hm_compar)){
whichcomp <- hm_compar[[h]]
listofcsv_hm <- listofcsv[whichcomp]
##select subset of DEGs for heatmap according to logFC/pvalue thresholds (normally 100-200 DEGs for good visualization)
hm_genes <- c()
for (k in 1:length(listofcsv_hm)){
hm_csvtop <- listofcsv_hm[[k]]
hm_genesel <- hm_csvtop[(hm_csvtop[,hm_pval[h]] < hm_pval.thr[h] & abs(hm_csvtop[, hm_logFC]) > hm_logFC.thr[h]), featureCol]
##set a list with all genes from the subset of comparisons
hm_genes <- c(hm_genes, as.vector(hm_genesel))
}
length(hm_genes)
##filter out duplicate genes
hm_genes.unique <- unique(hm_genes)
length(hm_genes.unique)
##take expression values of selected genes
Expr.genes2hm <- hm_dataset[which(hm_dataset[,featureCol] %in% hm_genes.unique),]
colnames(Expr.genes2hm)
dim(Expr.genes2hm)
##select samples to include in heatmap
colexclude <- c()
if(length(hm_groupexclude) > 0 & length(hm_groupexclude[[h]]) > 0) {
samples.selected <- targets[!(targets$Group %in% hm_groupexclude[[h]]),"ShortName"]
} else {
samples.selected <- targets[, "ShortName"]
}
expr.selected <- Expr.genes2hm[,c(featureCol, samples.selected)] #AQUí, aquest objecte no es crea bé. penso que el problema pot estar en la X de la design matrix davant del nom.
rownames(expr.selected) <- expr.selected[, featureCol] #set gene symbols as rownames
expr.selected <- as.matrix(expr.selected[,-1]) #set dataframe as matrix
dim(expr.selected) #must be equal to the number of samples
#calculem el dendograma per les columnes (samples) si així s'ha especificat a paràmetres
if (hm_clustCol) {
clustCol <- hclust(dist(t(expr.selected), method=hm_clustCol.dist), method = hm_clustCol.method)
filename.clustcol <-""
dendroCol <- as.dendrogram(clustCol)
} else {
clustCol <- FALSE
filename.clustcol <- ".noCol"
dendroCol <- FALSE
}
#colors pels heatmaps corresponent a les mostres incloses
targets1 <- targets
rownames(targets1) <- targets1$ShortName
targets1 <- targets1[colnames(expr.selected),]
hm_samplecolors <- unique(targets1$Colors)
names(hm_samplecolors) <- unique(targets1$Group)
hm_samplecolors <- list(Group=hm_samplecolors)
#calculem el dendograma per les files (gens) en base a distancia de correlacio (en el basicpipe ho fa aixi) si així s'ha indicat a parametres
if (hm_clustRow.cor) {
clustRow <- hclust(as.dist(1 - cor(t(expr.selected))),  method = "average")
filename.cor <- ".corRow"
dendroRow <- as.dendrogram(clustRow)
} else {clustRow <- TRUE;dendroRow <- TRUE; filename.cor <- ""} #sino deixa dendrorow=TRUE pq utilitzi el clustering com ve per defecte a la funcio heatmap.2
#save summary of heatmap results
sink(file.path(outputDir, resultsSummFN), split = FALSE, append = TRUE)
cat("\n-----------------------Heatmap settings---------------------------\n")
cat("-Sets for comparison:", paste(hm_comparNames, collapse=", "))
cat("\n-pvalue type:", paste(hm_pval, collapse=", "))
cat("\n-pvalue thr:", paste(hm_pval.thr, collapse=", "))
cat("\n-logFC:", paste(hm_logFC, collapse=", "))
cat("\n-Column clustering:", hm_clustCol, "; dist=", hm_clustCol.dist, "; method=", hm_clustCol.method)
cat("\n-Row clustering by correlation distance:", hm_clustRow.cor)
cat("\n")
sink()
##CREATE HEATMAPS with pheatmap
###plot
hm <- pheatmap(expr.selected,
cluster_rows = clustRow,
cluster_cols = clustCol, #determines if samples are reordered according to hierarchical clustering
main = paste0("Heatmap for ", hm_comparNames[h], ":\n", hm_pval[h], " < ", hm_pval.thr[h], " & abs(logFC) > ", hm_logFC[h],
" (", nrow(expr.selected), " genes)"),
scale = "row",
col = hm_palette,
border_color=NA,
fontsize=8,
fontsize_row = 3,
fontsize_col = 7,
annotation_col = targets1["Group"],
angle_col="45",
annotation_colors = hm_samplecolors)
pdf(file.path(outputDir, paste0("Heatmap", hm_comparNames[h], filename.clustcol, ".", hm_pval[h], hm_pval.thr[h], ".", hm_logFC, hm_logFC.thr[h], ".pdf")))
print(hm)
dev.off()
##CREATE INTERACTIVE HEATMAPS
if (hm_plots_interactive) {
heatmaply(expr.selected, main = paste0("HeatMap for ", hm_comparNames[h], ":\n", hm_pval[h], " < ", hm_pval.thr[h], " & abs(logFC) > ", hm_logFC.thr[h],
" (", nrow(expr.selected), " genes)"),
margins=c(50,50,80,50),
Colv = dendroCol,
Rowv = dendroRow,
scale = "row",
col = hm_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.5,
key = TRUE,
keysize = 2, #tamaño de la "key" si es pequeña no salen los colores
density.info = "histogram",
tracecol = NULL,
srtCol = 30 ,
ColSideColors = targets1$Colors,
revC=TRUE,
width=600,
height=800,
branches_lwd=0.3,
file=paste0(outputDir, "/Heatmap", hm_comparNames[h], filename.clustcol, ".", hm_pval[h], hm_pval.thr[h], ".", hm_logFC, hm_logFC.thr[h], ".html"))
}
}
}
}
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
?mc_hm
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/maUEB/R/mc_hm.R', echo=TRUE)
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/maUEB/R/mc_hm.R', echo=TRUE)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
hm_groupexclude
length(hm_groupexclude)
length(hm_groupexclude[[h]])
samples.selected <- targets[, "ShortName"]
samples.selected
c(featureCol, samples.selected)
hm_dataset=listofcsv[[1]]
View(hm_dataset)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets.f, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets.f, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
rm(mc_hm)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets.f, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
hm_comparNames
hm_compar
hm_groupexclude
View(targets.f)
h<-2
samples.selected <- targets[!(targets$Group %in% hm_groupexclude[[h]]),"ShortName"]
samples.selected
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets.f, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, resultsSummFN=resultsSummFN, outputDir=resultsDir)
mc_hm(listofcsv=listofcsv, hm_dataset=listofcsv[[1]], targets=targets.f, featureCol=featureCol, hm_comparNames=hm_comparNames, hm_compar=hm_compar, hm_groupexclude=hm_groupexclude, hm_pval=hm_pval, hm_pval.thr=hm_pval.thr, hm_logFC=hm_logFC, hm_logFC.thr=hm_logFC.thr, hm_palette=hm_palette, hm_clustCol=hm_clustCol, hm_clustCol.dist=hm_clustCol.dist, hm_clustCol.method=hm_clustCol.method, hm_clustRow.cor=hm_clustRow.cor, batcheffect=batcheffect, batchcolName=batchcolName, batchcolName2=batchcolName2, batchNumcolName=batchNumcolName, hm_plots_interactive=TRUE, resultsSummFN=resultsSummFN, outputDir=resultsDir)
#Parameters
source(file.path(paramDir, "04-ABS-GSEA.par"))
#Execution parameters
source(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"))
(loadABSGSEA_parameters <- read.table(file.path(paramDir, "04-ABS-GSEA.par"), header = FALSE, sep=";", as.is=TRUE))
(loadABSGSEA_allparameters <- read.table(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
(loadABSGSEA_todoparameters <- read.table(file.path(paramDir, "04-ABS-GSEA_analysistodo.par"), header = FALSE, sep=";", as.is=TRUE))
dataDir <- file.path(workingDir, dataDirN)
resultsDir <- file.path(workingDir, resultsDirN)
rdaDir <- dataDir
gmtDir <- file.path(dataDir, "gmt_files")
load(file.path(dataDir, inputABSGSEARda))
?gseGO
R.version()
version()
R.Version()
R.Version()$minor
R.Version()$major
source('/media/mferrer/Datos/Mireia/Scripts/Paquets_mireia/create_pkg_maUEB.R', echo=TRUE)
namescomp <- names(listofcsv)[GO_comparisons]
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofcsv, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, ranking_metric=ranking_metric, geneColname=geneColname, keyType=keyType, GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=rdaDir, gmtDir=gmtDir)
keyType
keyType <- "ENTREZID"
namescomp <- names(listofcsv)[GO_comparisons]
GSEA_GOresults.unfilt <- abs_gsea_GOunfilt(listofTopNamed=listofcsv, namescomp=namescomp, annotPackage=annotPackage, organism_annot= organism_annot, ranking_metric=ranking_metric, geneColname=geneColname, keyType=keyType, GO_minSetSize=GO_minSetSize, GO_maxSetSize=GO_maxSetSize, resultsSummFN=resultsSummFN, saveRda=saveRda, saveGMT=saveGMT, label=label, outputDir=resultsDir, rdaDir=rdaDir, gmtDir=gmtDir)
require(magick)
BiocManager::install("magick")
install.packages("magick")
